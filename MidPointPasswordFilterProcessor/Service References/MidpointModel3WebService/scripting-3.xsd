<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:tns="http://midpoint.evolveum.com/xml/ns/public/model/scripting-3" xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3" xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3" xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-3" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc" elementFormDefault="qualified" targetNamespace="http://midpoint.evolveum.com/xml/ns/public/model/scripting-3" jaxb:extensionBindingPrefixes="xjc" jaxb:version="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import schemaLocation="../../annotation-3.xsd" namespace="http://prism.evolveum.com/xml/ns/public/annotation-3">
    <xsd:annotation>
      <xsd:documentation>
                Common prism annotations used in various XSD schemas.
            </xsd:documentation>
    </xsd:annotation>
  </xsd:import>
  <xsd:import schemaLocation="../../types-3.xsd" namespace="http://prism.evolveum.com/xml/ns/public/types-3">
    <xsd:annotation>
      <xsd:documentation>
                Prism data types.
            </xsd:documentation>
    </xsd:annotation>
  </xsd:import>
  <xsd:import schemaLocation="../../query-3.xsd" namespace="http://prism.evolveum.com/xml/ns/public/query-3">
    <xsd:annotation>
      <xsd:documentation>
                Prism data types.
            </xsd:documentation>
    </xsd:annotation>
  </xsd:import>
  <xsd:import schemaLocation="../../common/common-3.xsd" namespace="http://midpoint.evolveum.com/xml/ns/public/common/common-3">
    <xsd:annotation>
      <xsd:documentation>
                Common midPoint schema.
            </xsd:documentation>
    </xsd:annotation>
  </xsd:import>
  <xsd:annotation>
    <xsd:documentation>
            Schema for midPoint scripting language.

            Recommended namespace prefix: s
        </xsd:documentation>
  </xsd:annotation>
  <xsd:complexType name="ScriptingExpressionEvaluationOptionsType">
    <xsd:annotation>
      <xsd:documentation>
                Options related to evaluation of scripting expression.
                EXPERIMENTAL
                In the future, these may become part of any scripting expression, allowing parts of a complex expression
                to be evaluated differently from its other parts.
            </xsd:documentation>
      <xsd:appinfo />
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="continueOnAnyError" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
                        Causes evaluation to continue even in the presence of any errors.
                        TODO make this more elaborate w.r.t. kind of error(s) encountered.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="hideOperationResults" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
                        Hides operation results from the output data.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ScriptingVariablesDefinitionType">
    <xsd:annotation>
      <xsd:documentation>
                Definition of scripting variables.
            </xsd:documentation>
      <xsd:appinfo>
        <a:since xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-3">3.7</a:since>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="variable" type="tns:ScriptingVariableDefinitionType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ScriptingVariableDefinitionType">
    <xsd:annotation>
      <xsd:documentation>
                Definition of a scripting variable.
                Expression types other than path-based ones are to be considered EXPERIMENTAL.
            </xsd:documentation>
      <xsd:appinfo>
        <a:since xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-3">3.7</a:since>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string" />
      <xsd:element minOccurs="0" name="description" type="xsd:string" />
      <xsd:element minOccurs="0" name="type" type="xsd:QName">
        <xsd:annotation>
          <xsd:documentation>
                        Type of the variable. Can be omitted for path expressions. EXPERIMENTAL.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="maxOccurs" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
                        Multiplicity specification. Can be omitted for path expressions. EXPERIMENTAL.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="expression" type="c:ExpressionType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="scriptingExpression" type="tns:ScriptingExpressionType" />
  <xsd:element name="expression" substitutionGroup="tns:scriptingExpression" type="tns:ScriptingExpressionType">
    <xsd:annotation>
      <xsd:appinfo>
        <a:deprecated xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-3">true</a:deprecated>
        <a:deprecatedSince xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-3">3.6</a:deprecatedSince>
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ScriptingExpressionType">
    <xsd:annotation>
      <xsd:documentation>
                Root of the expression type inheritance hierarchy.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence />
  </xsd:complexType>
  <xsd:complexType name="ExpressionSequenceType">
    <xsd:annotation>
      <xsd:documentation>
                Sequence of command expressions - they are executed one after another,
                input sent to the sequence as a whole is then sent individually
                to each expression. Output of the last expression is considered to be the output of
                the whole sequence.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="tns:ScriptingExpressionType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" ref="tns:scriptingExpression" />
        </xsd:sequence>
        <xsd:attribute name="list" type="xsd:boolean" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="sequence" substitutionGroup="tns:scriptingExpression" type="tns:ExpressionSequenceType">
    <xsd:annotation>
      <xsd:appinfo>
        <a:heterogeneousListItem xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-3" />
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ExpressionPipelineType">
    <xsd:annotation>
      <xsd:documentation>
                Pipeline of expressions - they are executed one after another,
                input sent to the pipeline as a whole is sent to the first expression.
                Output from the N-th expression is sent as an input to the N+1-th expression.
                Output of the last expression is considered to be the output of the whole
                pipeline.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="tns:ScriptingExpressionType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" ref="tns:scriptingExpression" />
        </xsd:sequence>
        <xsd:attribute name="list" type="xsd:boolean" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="pipeline" substitutionGroup="tns:scriptingExpression" type="tns:ExpressionPipelineType">
    <xsd:annotation>
      <xsd:appinfo>
        <a:heterogeneousListItem />
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="SearchExpressionType">
    <xsd:annotation>
      <xsd:documentation>
                Queries the model for objects of a given type, optionally fulfilling given condition.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="tns:ScriptingExpressionType">
        <xsd:sequence>
          <xsd:element name="type" type="xsd:QName">
            <xsd:annotation>
              <xsd:documentation>
                                Type whose instances are searched for.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="variable" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                                Variable to hold found instances. Not yet supported.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="query" type="q:QueryType">
            <xsd:annotation>
              <xsd:documentation>
                                Query to apply when searching for instances. (Alternative to searchFilter. This is tried as the first one.)
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="searchFilter" type="q:SearchFilterType">
            <xsd:annotation>
              <xsd:documentation>
                                Filter to apply when searching for instances. (Alternative to query. This is tried as second one.)
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="options" type="c:SelectorQualifiedGetOptionsType">
            <xsd:annotation>
              <xsd:documentation>
                                Filter to apply when searching for instances. (Alternative to query. This is tried as second one.)
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="parameter" type="tns:ActionParameterValueType">
            <xsd:annotation>
              <xsd:documentation>
                                Action parameters.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="tns:scriptingExpression">
            <xsd:annotation>
              <xsd:documentation>
                                Expression to evaluate for each object found.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="search" substitutionGroup="tns:scriptingExpression" type="tns:SearchExpressionType">
    <xsd:annotation>
      <xsd:appinfo>
        <a:heterogeneousListItem />
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="FilterExpressionType">
    <xsd:annotation>
      <xsd:documentation>
                Filters input on a given condition.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="tns:ScriptingExpressionType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="filter" type="q:SearchFilterType">
            <xsd:annotation>
              <xsd:documentation>
                                Filter to apply to the input stream.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="filter" substitutionGroup="tns:scriptingExpression" type="tns:FilterExpressionType">
    <xsd:annotation>
      <xsd:appinfo>
        <a:heterogeneousListItem />
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="SelectExpressionType">
    <xsd:annotation>
      <xsd:documentation>
                Select given item.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="tns:ScriptingExpressionType">
        <xsd:sequence>
          <xsd:element name="path" type="t:ItemPathType">
            <xsd:annotation>
              <xsd:documentation>
                                Path to the data item that has to be selected.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="select" substitutionGroup="tns:scriptingExpression" type="tns:SelectExpressionType">
    <xsd:annotation>
      <xsd:appinfo>
        <a:heterogeneousListItem />
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="FilterContentExpressionType">
    <xsd:annotation>
      <xsd:documentation>
                Keeps/removes selected items from the input value.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="tns:ScriptingExpressionType">
        <xsd:choice>
          <xsd:element maxOccurs="unbounded" name="keep" type="t:ItemPathType">
            <xsd:annotation>
              <xsd:documentation>
                                Path to the data item(s) that should be kept.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" name="remove" type="t:ItemPathType">
            <xsd:annotation>
              <xsd:documentation>
                                Path to the data item(s) that should be removed.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="filterContent" substitutionGroup="tns:scriptingExpression" type="tns:FilterContentExpressionType">
    <xsd:annotation>
      <xsd:appinfo>
        <a:heterogeneousListItem />
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ForeachExpressionType">
    <xsd:annotation>
      <xsd:documentation>
                Executes a given command individually for each item arriving at the input.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="tns:ScriptingExpressionType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="variable" type="xsd:QName">
            <xsd:annotation>
              <xsd:documentation>
                                Variable to hold emitted instances.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" ref="tns:scriptingExpression" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="foreach" substitutionGroup="tns:scriptingExpression" type="tns:ForeachExpressionType">
    <xsd:annotation>
      <xsd:appinfo>
        <a:heterogeneousListItem />
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ActionExpressionType">
    <xsd:annotation>
      <xsd:documentation>
                Executes a given action (add, modify, delete, enable, disable, assign, ...)
            </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="tns:ScriptingExpressionType">
        <xsd:sequence>
          <xsd:element name="type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                                Action to execute.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="parameter" type="tns:ActionParameterValueType">
            <xsd:annotation>
              <xsd:documentation>
                                Action parameters.
                            </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="action" substitutionGroup="tns:scriptingExpression" type="tns:ActionExpressionType">
    <xsd:annotation>
      <xsd:appinfo>
        <a:heterogeneousListItem />
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ActionParameterValueType">
    <xsd:annotation>
      <xsd:documentation>
                Value of a parameter for an action.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						Parameter name.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:choice>
        <xsd:element minOccurs="0" ref="c:value" />
        <xsd:element minOccurs="0" ref="tns:scriptingExpression">
          <xsd:annotation>
            <xsd:documentation>
							Parameter (argument) value.
						</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExecuteScriptType">
    <xsd:sequence>
      <xsd:element ref="tns:scriptingExpression" />
      <xsd:element minOccurs="0" name="input" type="tns:ValueListType" />
      <xsd:element minOccurs="0" name="options" type="tns:ScriptingExpressionEvaluationOptionsType" />
      <xsd:element minOccurs="0" name="variables" type="tns:ScriptingVariablesDefinitionType">
        <xsd:annotation>
          <xsd:appinfo>
            <a:since>3.7</a:since>
          </xsd:appinfo>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="executeScript" type="tns:ExecuteScriptType" />
  <xsd:complexType name="ExecuteScriptOutputType">
    <xsd:annotation>
      <xsd:documentation>
                Output of a single script execution.
            </xsd:documentation>
      <xsd:appinfo>
        <a:since>3.6</a:since>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="dataOutput" type="tns:PipelineDataType">
        <xsd:annotation>
          <xsd:documentation>
                        Data output of the execution of the script.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="consoleOutput" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
                        Text ("console") output of the execution of the script.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="executeScriptOutput" type="tns:ExecuteScriptOutputType" />
  <xsd:complexType name="ValueListType">
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="value" type="xsd:anyType">
        <xsd:annotation>
          <xsd:appinfo>
            <a:rawType />
          </xsd:appinfo>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PipelineDataType">
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="tns:PipelineItemType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="pipelineData" type="tns:PipelineDataType" />
  <xsd:complexType name="PipelineItemType">
    <xsd:sequence>
      <xsd:element name="value" type="xsd:anyType">
        <xsd:annotation>
          <xsd:documentation>
                        TODO
                    </xsd:documentation>
          <xsd:appinfo>
            <a:rawType />
          </xsd:appinfo>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="result" type="c:OperationResultType">
        <xsd:annotation>
          <xsd:documentation>
                        TODO
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>